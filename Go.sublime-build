{
    "selector": "source.go",
    "file_regex": "^\\s*(.+?):([0-9]+):([0-9]+)?:?\\s*(.+)$",
    "syntax": "Packages/GoFeather/Build Results - Go.tmLanguage",

    "cmd": ["go", "build"],

    "variants":
    [
        {
            "name": "Install",
            "cmd": ["go", "install"]
        },
        {
            "name": "Clean",
            "cmd": ["go", "clean"]
        },
        {
            "name": "Test",
            "cmd": ["go", "test"]
        },
        {
            "name": "Generate",
            "cmd": ["go", "generate"]
        },
        {
            "name": "Format",

            // Format the files in the current package.
            "shell_cmd": "goimports -w *.go",

            // Format the files in the current package and all (non-vendored) sub-packages.
            //"shell_cmd": "find . -type f -name '*.go' -not -path './vendor/*' -print0 | xargs -0 goimports -w",

            "windows": {
                // Format the files in the current package.
                "shell_cmd": "for /f usebackq %F in (`dir /b *.go`) do goimports -w \"%F\""

                // Format the files in the current package and all (non-vendored) sub-packages.
                //"shell_cmd": "for /f usebackq %F in (`dir /b /s *.go ^| findstr /V /C:\\vendor\\`) do goimports -w \"%F\""
            }
        },
        {
            "name": "Analyze",
            // TODO(DH): --format={{...}} to produce an output that aligns: path:line:col: | linter | severity | message
            // https://golang.org/pkg/text/template/
            "cmd": ["gometalinter", "--config=$packages/GoFeather/gometalinter_config.json"],

            "word_wrap": false
        }
    ]
}
