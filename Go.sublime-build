{
    "selector": "source.go",
    "file_regex": "^\\s*(.+?):([0-9]+):([0-9]+)?:?\\s*(.+)$",
    "syntax": "Packages/GoFeather/Build Results - Go.tmLanguage",

    "cmd": ["go", "build"],

    "variants":
    [
        {
            "name": "Build (Single File)",
            "cmd": ["go", "build", "$file"]
        },
        {
            "name": "Install",
            "cmd": ["go", "install"]
        },
        {
            "name": "Clean",
            "cmd": ["go", "clean"]
        },
        {
            "name": "Test",
            "cmd": ["go", "test"]
        },
        {
            "name": "Run (Single File)",
            "cmd": ["go", "run", "$file"]
        },
        {
            "name": "Format",

            // When goimports/gofmt are used to format code, they do not employ
            // the smarts to know that vendor directories should be skipped.
            // `go fmt` (as distinct from `gofmt`) does, but unfortunately
            // there is no equivalent `go imports`.
            "shell": true,
            "cmd": "goimports -w \\$(find . -type f -name '*.go' -not -path './vendor/*')",

            "windows": {
                "shell": false,
                // TODO(DH): Need to find a way to skip files in vendor dirs as above.
                "cmd": ["goimports", "-w", "."]
            }
        },
        {
            "name": "Lint",
            "shell": true,
            "cmd": "golint | grep -E -v '(should have comment|comment .* should be of the form|unexported .* which can be annoying to use)'"
        },
        {
            "name": "Analyze",
            "shell": true,
            "cmd": "echo VET ; go tool vet . ; echo MEGACHECK ; megacheck -unused.enabled=false"
        }
    ]
}
