{
    "selector": "source.go",
    "file_regex": "^\\s*(.+?):([0-9]+):([0-9]+)?:?\\s*(.+)$",
    "syntax": "Packages/GoFeather/Build Results - Go.tmLanguage",

    "cmd": ["go", "build"],

    "variants":
    [
        {
            "name": "Install",
            "cmd": ["go", "install"]
        },
        {
            "name": "Clean",
            "cmd": ["go", "clean"]
        },
        {
            "name": "Test",
            "cmd": ["go", "test"]
        },
        {
            "name": "Generate",
            "cmd": ["go", "generate"]
        },
        {
            "name": "Format",
            // When goimports/gofmt are used to format code, they do not employ
            // the smarts to know that vendor directories should be skipped.
            // `go fmt` (as distinct from `gofmt`) does, but unfortunately
            // there is no equivalent `go imports`.

            "shell_cmd": "find . -type f -name '*.go' -not -path './vendor/*' -print0 | xargs -0 goimports -w",

            "windows": {
                "shell_cmd": "for /f usebackq %F in (`dir /b /s *.go ^| findstr /V /C:\\vendor\\`) do goimports -w \"%F\""
            }
        },
        {
            "name": "Analyze",

            "shell_cmd": "echo Vet ; echo --- ; go vet ; echo ; echo Megacheck ; echo --------- ; megacheck ; echo ; echo Lint ; echo ---- ; golint",

            "windows": {
                "shell_cmd": "echo Vet & echo --- & go vet & echo. & echo Megacheck & echo --------- & megacheck & echo. & echo Lint & echo ---- & golint"
            }
        }
    ]
}
